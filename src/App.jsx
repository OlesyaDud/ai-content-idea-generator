import React, { useState } from "react";
import OpenAI from "openai";

// ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞ OpenAI
const client = new OpenAI({
  apiKey: import.meta.env.VITE_OPENAI_API_KEY,
  dangerouslyAllowBrowser: true, // ‚ùó–¢–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–æ–≤. –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ ‚Äî –≤—ã–Ω–µ—Å—Ç–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä.
});

function App() {
  const [step, setStep] = useState(1);
  const [form, setForm] = useState({
    niche: "–§–∏—Ç–Ω–µ—Å",
    goal: "–ü—Ä–∏–≤–ª–µ—á—å –∞—É–¥–∏—Ç–æ—Ä–∏—é",
    format: "–ü–æ—Å—Ç –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö",
    postLength: "",
    platform: "",
  });
  const [ideas, setIdeas] = useState([]);
  const [selectedIdea, setSelectedIdea] = useState(null);
  const [generatedPost, setGeneratedPost] = useState("");
  const [loading, setLoading] = useState(false);
  const [copied, setCopied] = useState(false);

  // ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ñ–æ—Ä–º—ã
  const handleChange = (e) => {
    const { name, value } = e.target;
    setForm({ ...form, [name]: value });
  };

  // ‚úÖ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
  const copyToClipboard = () => {
    if (navigator.clipboard && navigator.clipboard.writeText) {
      navigator.clipboard
        .writeText(generatedPost)
        .then(() => {
          setCopied(true);
          setTimeout(() => setCopied(false), 2000);
        })
        .catch(fallbackCopy);
    } else fallbackCopy();
  };

  const fallbackCopy = () => {
    const textArea = document.createElement("textarea");
    textArea.value = generatedPost;
    textArea.style.position = "fixed";
    textArea.style.left = "-999999px";
    document.body.appendChild(textArea);
    textArea.select();
    document.execCommand("copy");
    document.body.removeChild(textArea);
    setCopied(true);
    setTimeout(() => setCopied(false), 2000);
  };

  // ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–¥–µ–π
  const generateIdeas = async () => {
    setLoading(true);
    setStep(2);

    try {
      const prompt = `
–¢—ã ‚Äî –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π AI, –ø–æ–º–æ–≥–∞—é—â–∏–π –ø—Ä–∏–¥—É–º—ã–≤–∞—Ç—å –∏–¥–µ–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞.

–ù–∏—à–∞: ${form.niche}
–¶–µ–ª—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${form.goal}
–§–æ—Ä–º–∞—Ç: ${form.format}
${
  form.format === "–ü–æ—Å—Ç –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö"
    ? `–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${form.platform || "—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è"}; –¢–∏–ø –ø–æ—Å—Ç–∞: ${
        form.postLength || "—Å—Ä–µ–¥–Ω–∏–π"
      }`
    : ""
}

–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π 5 –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö –∏–¥–µ–π –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞, –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–æ–¥ —ç—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.
–î–ª—è –∫–∞–∂–¥–æ–π –∏–¥–µ–∏:
1Ô∏è‚É£ –ü—Ä–∏–¥—É–º–∞–π –∫–æ—Ä–æ—Ç–∫–æ–µ –∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–µ–µ—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ (–¥–æ 10 —Å–ª–æ–≤).
2Ô∏è‚É£ –ù–∞–ø–∏—à–∏ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (1‚Äì2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –æ–±—ä—è—Å–Ω–∏, —á–µ–º –∏–¥–µ—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞ –∏ –ø–æ–ª–µ–∑–Ω–∞ –∞—É–¥–∏—Ç–æ—Ä–∏–∏).

‚ö†Ô∏è –í–∞–∂–Ω–æ:
- –ì–µ–Ω–µ—Ä–∏—Ä—É–π —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∏–¥–µ–∏.
- –ù–µ —Å–æ–∑–¥–∞–≤–∞–π –≤–∏–¥–µ–æ –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.
- –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç, –∞–¥–∞–ø—Ç–∏—Ä—É–π –µ–≥–æ –ø–æ–¥ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç.

–§–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞:
1. –ù–∞–∑–≤–∞–Ω–∏–µ ‚Äî –æ–ø–∏—Å–∞–Ω–∏–µ
2. ...
`;

      const completion = await client.chat.completions.create({
        model: "gpt-4o-mini",
        messages: [{ role: "user", content: prompt }],
      });

      const text = completion.choices[0].message.content;
      const parsed = text
        .split(/\d+\.\s/)
        .filter((x) => x.trim())
        .map((t) => {
          const [title, ...desc] = t.split("‚Äî");
          return {
            title: title?.trim() || "",
            desc: desc.join("‚Äî").trim(),
          };
        });

      setIdeas(parsed);
    } catch (err) {
      console.error(err);
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ OpenAI. –ü—Ä–æ–≤–µ—Ä—å API –∫–ª—é—á.");
    } finally {
      setLoading(false);
    }
  };

  // ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  const generatePost = async (idea) => {
    setLoading(true);
    setStep(3);
    setSelectedIdea(idea);

    try {
      const isSocial = form.format === "–ü–æ—Å—Ç –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö";

      const prompt = `
–¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–π –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä –∏ –∞–≤—Ç–æ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞.

üéØ –ó–∞–¥–∞—á–∞:
–°–æ–∑–¥–∞—Ç—å ${form.format.toLowerCase()} –Ω–∞ —Ç–µ–º—É:
"${idea.title}" ‚Äî ${idea.desc}

üìö –ö–æ–Ω—Ç–µ–∫—Å—Ç:
- –ù–∏—à–∞: ${form.niche}
- –¶–µ–ª—å: ${form.goal}
${
  isSocial
    ? `- –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${form.platform}\n- –¢–∏–ø –ø–æ—Å—Ç–∞: ${form.postLength}`
    : ""
}

üß† –ü—Ä–∞–≤–∏–ª–∞:
- –ü–∏—à–∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ, –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–µ, –±–µ–∑ —à–∞–±–ª–æ–Ω–æ–≤.
- –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π —Å–ª–æ–≤–∞ "–í–≤–µ–¥–µ–Ω–∏–µ", "–û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å", "–ó–∞–∫–ª—é—á–µ–Ω–∏–µ".
- –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π Markdown-—Ä–∞–∑–º–µ—Ç–∫—É (#, ** –∏ —Ç. –¥.).
- –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –ª–æ–≥–∏—á–Ω–æ, —Å –ø–ª–∞–≤–Ω—ã–º–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞–º–∏.
${
  isSocial
    ? `
üì± –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –ø–æ—Å—Ç–æ–≤ –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö:
- ${
        form.postLength === "–ö–æ—Ä–æ—Ç–∫–∏–π"
          ? "–î–æ 700 —Å–∏–º–≤–æ–ª–æ–≤."
          : form.postLength === "–î–ª–∏–Ω–Ω—ã–π"
          ? "–î–æ 1500 —Å–∏–º–≤–æ–ª–æ–≤."
          : "–û–∫–æ–ª–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤."
      }
- –ù–∞—á–∞–ª–æ –¥–æ–ª–∂–Ω–æ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ.
- –°—Ç–∏–ª—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:
  ‚Ä¢ LinkedIn ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π, —Å —Ü–µ–Ω–Ω—ã–º–∏ –∏–Ω—Å–∞–π—Ç–∞–º–∏.
  ‚Ä¢ Instagram ‚Äî —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π, –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π, —Å –ª–∏—á–Ω—ã–º–∏ –Ω–æ—Ç–∞–º–∏.
  ‚Ä¢ Telegram ‚Äî –¥—Ä—É–∂–µ—Å–∫–∏–π, –∏—Å–∫—Ä–µ–Ω–Ω–∏–π, –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π.
- –ó–∞–≤–µ—Ä—à–∏ –ª—ë–≥–∫–∏–º –ø—Ä–∏–∑—ã–≤–æ–º –∫ –¥–µ–π—Å—Ç–≤–∏—é (–≤–æ–ø—Ä–æ—Å, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ).
`
    : ""
}

–§–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞:
–¢–æ–ª—å–∫–æ —á–∏—Å—Ç—ã–π —Ç–µ–∫—Å—Ç –±–µ–∑ —Ä–∞–∑–º–µ—Ç–∫–∏.
`;

      const completion = await client.chat.completions.create({
        model: "gpt-4o-mini",
        messages: [
          {
            role: "system",
            content:
              "–¢—ã –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ –æ–ø—ã—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä, —Å–æ–∑–¥–∞—é—â–∏–π –∂–∏–≤—ã–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.",
          },
          { role: "user", content: prompt },
        ],
      });

      const cleanText = completion.choices[0].message.content
        .replace(/\*\*/g, "")
        .replace(/#+\s*/g, "")
        .trim();

      setGeneratedPost(cleanText);
    } catch (err) {
      console.error(err);
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞.");
    } finally {
      setLoading(false);
    }
  };

  // ‚úÖ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å
  return (
    <div className="min-h-screen bg-gray-50 flex flex-col items-center py-12 px-4">
      {/* Header */}
      <header className="text-center mb-12">
        <h1 className="text-4xl font-bold text-purple-500">
          AI –ö–æ–Ω—Ç–µ–Ω—Ç-–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–¥–µ–π
        </h1>
        <p className="text-gray-500 mt-3 text-lg">
          –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∏–¥–µ–∏ –∏ —Ç–µ–∫—Å—Ç—ã –¥–ª—è —Å–≤–æ–µ–π –Ω–∏—à–∏
        </p>
      </header>

      {/* Step 1 */}
      {step === 1 && (
        <div className="bg-white shadow-md rounded-2xl p-8 w-full max-w-md">
          <h2 className="text-2xl font-bold mb-6 text-gray-900">
            –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–¥–µ–π
          </h2>

          {/* –ù–∏—à–∞ */}
          <div className="mb-5">
            <label className="block text-base font-medium text-gray-700 mb-2">
              –ù–∏—à–∞
            </label>
            <select
              name="niche"
              value={form.niche}
              onChange={handleChange}
              className="w-full rounded-lg border border-gray-300 p-3 text-gray-900 focus:ring-2 focus:ring-purple-200"
            >
              <option>–§–∏—Ç–Ω–µ—Å</option>
              <option>–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</option>
              <option>–ë–∏–∑–Ω–µ—Å</option>
              <option>–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥</option>
              <option>–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è</option>
            </select>
          </div>

          {/* –¶–µ–ª—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */}
          <div className="mb-5">
            <label className="block text-base font-medium text-gray-700 mb-2">
              –¶–µ–ª—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            </label>
            <select
              name="goal"
              value={form.goal}
              onChange={handleChange}
              className="w-full rounded-lg border border-gray-300 p-3 text-gray-900 focus:ring-2 focus:ring-purple-200"
            >
              <option>–ü—Ä–∏–≤–ª–µ—á—å –∞—É–¥–∏—Ç–æ—Ä–∏—é</option>
              <option>–û–±—É—á–∏—Ç—å</option>
              <option>–ü—Ä–æ–¥–∞—Ç—å</option>
              <option>–ú–æ—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å</option>
              <option>–£–¥–µ—Ä–∂–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å</option>
            </select>
          </div>

          {/* –§–æ—Ä–º–∞—Ç */}
          <div className="mb-5">
            <label className="block text-base font-medium text-gray-700 mb-2">
              –§–æ—Ä–º–∞—Ç
            </label>
            <select
              name="format"
              value={form.format}
              onChange={handleChange}
              className="w-full rounded-lg border border-gray-300 p-3 text-gray-900 focus:ring-2 focus:ring-purple-200"
            >
              <option>–ü–æ—Å—Ç –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö</option>
              <option>–°—Ç–∞—Ç—å—è</option>
              <option>–°—Ü–µ–Ω–∞—Ä–∏–π –≤–∏–¥–µ–æ</option>
            </select>
          </div>

          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –ø–æ—Å—Ç–∞ */}
          {form.format === "–ü–æ—Å—Ç –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö" && (
            <>
              <div className="mb-5">
                <label className="block text-base font-medium text-gray-700 mb-2">
                  –¢–∏–ø –ø–æ—Å—Ç–∞
                </label>
                <select
                  name="postLength"
                  value={form.postLength}
                  onChange={handleChange}
                  className="w-full rounded-lg border border-gray-300 p-3 text-gray-900 focus:ring-2 focus:ring-purple-200"
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ...</option>
                  <option>–ö–æ—Ä–æ—Ç–∫–∏–π</option>
                  <option>–°—Ä–µ–¥–Ω–∏–π</option>
                  <option>–î–ª–∏–Ω–Ω—ã–π</option>
                </select>
              </div>

              <div className="mb-5">
                <label className="block text-base font-medium text-gray-700 mb-2">
                  –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞
                </label>
                <select
                  name="platform"
                  value={form.platform}
                  onChange={handleChange}
                  className="w-full rounded-lg border border-gray-300 p-3 text-gray-900 focus:ring-2 focus:ring-purple-200"
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ...</option>
                  <option>LinkedIn</option>
                  <option>Instagram</option>
                  <option>Telegram</option>
                </select>
              </div>
            </>
          )}

          <button
            onClick={generateIdeas}
            disabled={loading}
            className="w-full bg-purple-500 text-white py-3 rounded-lg font-semibold text-base mt-8 hover:bg-purple-600 transition disabled:opacity-60"
          >
            {loading ? "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è..." : "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–¥–µ–∏"}
          </button>
        </div>
      )}

      {/* Step 2 */}
      {step === 2 && (
        <div className="w-full max-w-4xl">
          <div className="flex justify-between items-center mb-8">
            <h2 className="text-3xl font-bold text-gray-900">
              –ò–¥–µ–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            </h2>
            <button
              onClick={() => setStep(1)}
              className="text-base text-purple-500 hover:underline font-medium"
            >
              –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
            </button>
          </div>

          {loading ? (
            <p className="text-center text-gray-500">–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–¥–µ–π...</p>
          ) : (
            <div className="space-y-6">
              {ideas.map((idea, idx) => (
                <div
                  key={idx}
                  className="bg-white rounded-2xl shadow-sm p-8 hover:shadow-md transition"
                >
                  <h3 className="font-bold text-2xl text-gray-900 mb-3">
                    {idea.title}
                  </h3>
                  <p className="text-gray-500 mb-6 text-base leading-relaxed">
                    {idea.desc}
                  </p>
                  <button
                    onClick={() => generatePost(idea)}
                    className="w-full bg-purple-500 text-white py-3 rounded-xl font-semibold hover:bg-purple-600 transition text-base"
                  >
                    –í—ã–±—Ä–∞—Ç—å –∏–¥–µ—é
                  </button>
                </div>
              ))}
            </div>
          )}
        </div>
      )}

      {/* Step 3 */}
      {step === 3 && (
        <div className="w-full max-w-3xl bg-white rounded-2xl shadow-md p-10">
          <h2 className="text-3xl font-bold text-center mb-8 text-gray-900">
            –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
          </h2>

          {loading ? (
            <p className="text-center text-gray-500 text-lg">
              –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞...
            </p>
          ) : (
            <>
              <div className="bg-gray-50 p-6 rounded-xl border border-gray-200 mb-4">
                <p className="whitespace-pre-line text-gray-800 leading-relaxed text-base">
                  {generatedPost}
                </p>
              </div>

              {/* –°—á—ë—Ç—á–∏–∫ —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π */}
              {form.format === "–ü–æ—Å—Ç –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö" && (
                <p className="text-right text-sm text-gray-400 mb-6">
                  {generatedPost.length} /{" "}
                  {form.postLength === "–ö–æ—Ä–æ—Ç–∫–∏–π"
                    ? "700"
                    : form.postLength === "–î–ª–∏–Ω–Ω—ã–π"
                    ? "1500"
                    : "1000"}{" "}
                  —Å–∏–º–≤–æ–ª–æ–≤
                </p>
              )}

              <div className="flex justify-between flex-wrap gap-4">
                <button
                  onClick={copyToClipboard}
                  className="bg-purple-500 text-white py-3 px-6 rounded-xl hover:bg-purple-600 transition font-semibold text-base"
                >
                  {copied ? "‚úì –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!" : "–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç"}
                </button>
                <button
                  onClick={() => setStep(2)}
                  className="text-purple-500 hover:underline font-medium text-base"
                >
                  –ù–∞–∑–∞–¥ –∫ –∏–¥–µ—è–º
                </button>
              </div>
            </>
          )}
        </div>
      )}

      <footer className="mt-16 text-gray-500 text-sm">
        –°–æ–∑–¥–∞–Ω–æ —Å ‚ù§Ô∏è –ø—Ä–∏ –ø–æ–º–æ—â–∏{" "}
        <span className="text-purple-500 font-medium">AI</span>
      </footer>
    </div>
  );
}

export default App;
